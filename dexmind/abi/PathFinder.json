[
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "_pathValidator",
                "type": "address"
            },
            {
                "internalType": "address",
                "name": "_quoteManager",
                "type": "address"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
    },
    {
        "inputs": [],
        "name": "ExcessiveGas",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "InvalidParams",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "NoPathFound",
        "type": "error"
    },
    {
        "inputs": [],
        "name": "OnlyOwner",
        "type": "error"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
            },
            {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": false,
                "internalType": "address[]",
                "name": "tokens",
                "type": "address[]"
            },
            {
                "indexed": false,
                "internalType": "address[]",
                "name": "dexes",
                "type": "address[]"
            },
            {
                "indexed": false,
                "internalType": "uint256",
                "name": "expectedProfit",
                "type": "uint256"
            },
            {
                "indexed": false,
                "internalType": "uint256",
                "name": "gasEstimate",
                "type": "uint256"
            }
        ],
        "name": "PathFound",
        "type": "event"
    },
    {
        "anonymous": false,
        "inputs": [
            {
                "indexed": false,
                "internalType": "uint256",
                "name": "maxGas",
                "type": "uint256"
            },
            {
                "indexed": false,
                "internalType": "uint256",
                "name": "minLiquidity",
                "type": "uint256"
            },
            {
                "indexed": false,
                "internalType": "uint256",
                "name": "maxImpact",
                "type": "uint256"
            }
        ],
        "name": "SearchParamsUpdated",
        "type": "event"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "startToken",
                "type": "address"
            },
            {
                "internalType": "uint256",
                "name": "amountIn",
                "type": "uint256"
            },
            {
                "internalType": "uint256",
                "name": "maxGasPrice",
                "type": "uint256"
            }
        ],
        "name": "findBestPath",
        "outputs": [
            {
                "components": [
                    {
                        "components": [
                            {
                                "internalType": "address",
                                "name": "dex",
                                "type": "address"
                            },
                            {
                                "internalType": "address[]",
                                "name": "path",
                                "type": "address[]"
                            },
                            {
                                "internalType": "uint256",
                                "name": "expectedOutput",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "minOutput",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "gasEstimate",
                                "type": "uint256"
                            }
                        ],
                        "internalType": "struct IArbitrageTypes.PathStep[]",
                        "name": "steps",
                        "type": "tuple[]"
                    },
                    {
                        "internalType": "uint256",
                        "name": "totalGasEstimate",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "expectedProfit",
                        "type": "uint256"
                    },
                    {
                        "internalType": "bool",
                        "name": "useFlashLoan",
                        "type": "bool"
                    },
                    {
                        "internalType": "address[]",
                        "name": "tokens",
                        "type": "address[]"
                    },
                    {
                        "internalType": "address[]",
                        "name": "dexes",
                        "type": "address[]"
                    }
                ],
                "internalType": "struct IArbitrageTypes.ArbitragePath",
                "name": "",
                "type": "tuple"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "startToken",
                "type": "address"
            },
            {
                "internalType": "address[]",
                "name": "targetTokens",
                "type": "address[]"
            },
            {
                "internalType": "uint256",
                "name": "amountIn",
                "type": "uint256"
            },
            {
                "internalType": "uint256",
                "name": "maxGasPrice",
                "type": "uint256"
            }
        ],
        "name": "findPathsWithTokens",
        "outputs": [
            {
                "components": [
                    {
                        "components": [
                            {
                                "internalType": "address",
                                "name": "dex",
                                "type": "address"
                            },
                            {
                                "internalType": "address[]",
                                "name": "path",
                                "type": "address[]"
                            },
                            {
                                "internalType": "uint256",
                                "name": "expectedOutput",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "minOutput",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "gasEstimate",
                                "type": "uint256"
                            }
                        ],
                        "internalType": "struct IArbitrageTypes.PathStep[]",
                        "name": "steps",
                        "type": "tuple[]"
                    },
                    {
                        "internalType": "uint256",
                        "name": "totalGasEstimate",
                        "type": "uint256"
                    },
                    {
                        "internalType": "uint256",
                        "name": "expectedProfit",
                        "type": "uint256"
                    },
                    {
                        "internalType": "bool",
                        "name": "useFlashLoan",
                        "type": "bool"
                    },
                    {
                        "internalType": "address[]",
                        "name": "tokens",
                        "type": "address[]"
                    },
                    {
                        "internalType": "address[]",
                        "name": "dexes",
                        "type": "address[]"
                    }
                ],
                "internalType": "struct IArbitrageTypes.ArbitragePath[]",
                "name": "",
                "type": "tuple[]"
            }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "maxGasPerPath",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "maxPriceImpact",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "minLiquidityRequired",
        "outputs": [
            {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "owner",
        "outputs": [
            {
                "internalType": "address",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "pathValidator",
        "outputs": [
            {
                "internalType": "contract IPathValidator",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "quoteManager",
        "outputs": [
            {
                "internalType": "contract IQuoteManager",
                "name": "",
                "type": "address"
            }
        ],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
            }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    },
    {
        "inputs": [
            {
                "internalType": "uint256",
                "name": "_maxGasPerPath",
                "type": "uint256"
            },
            {
                "internalType": "uint256",
                "name": "_minLiquidityRequired",
                "type": "uint256"
            },
            {
                "internalType": "uint256",
                "name": "_maxPriceImpact",
                "type": "uint256"
            }
        ],
        "name": "updateSearchParams",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
    }
]
